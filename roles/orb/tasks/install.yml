---

- name:
  user:
    name: "{{orb_user}}"
    state: present

- name: Add ORB from Git
  git:
    repo: "{{django_orb.git_remote_url}}"
    dest: "{{django_orb.path}}"
    version: "{{django_orb.git_version_reference}}"

- name: Add orb-translations from Git
  git:
    repo: "{{orb_translations.git_remote_url}}"
    dest: "{{orb_translations.path}}"
    version: "{{orb_translations.git_version_reference}}"

- name: Set up ORB virtualenv
  pip:
    virtualenv: "{{orb_virtualenv_path}}"
    requirements: "{{orb_pip_requirements}}"

- name: Set up ORB database
  mysql_db:
    name: "{{orb_mysql_db}}"
    state: present
  tags:
    - mysql

- name: Set up ORB database user
  mysql_user:
    name: mpower
    password: mpower
    priv: '*.*:ALL'
    state: present

- name: ORB static directory
  file:
    path: "{{orb_static_root}}"
    state: directory
    mode: 0755
    owner: "{{orb_user}}"
    group: "{{orb_user}}"

- name: ORB media directory
  file:
    path: "{{orb_media_root}}"
    state: directory
    mode: 0755
    owner: "{{orb_user}}"
    group: "{{orb_user}}"

- name: ORB config directory
  file:
    path: "{{orb_config_path}}"
    state: directory
    mode: 0755

- name: ORB config module file
  template:
    src: "init.py.j2"
    dest: "{{orb_config_path}}/__init__.py"

- name: ORB wsgi file
  template:
    src: "wsgi.py.j2"
    dest: "{{orb_wsgi_path}}"

- name: ORB settings file
  template:
    src: "settings.py.j2"
    dest: "{{orb_config_path}}/settings.py"

- name: ORB urls file
  template:
    src: "urls.py.j2"
    dest: "{{orb_config_path}}/urls.py"

- name: ORB manage file
  template:
    src: "manage.py.j2"
    dest: "{{orb_base_project}}/manage.py"
    owner: "{{orb_user}}"
    group: "{{orb_user}}"
    mode: "a+x"

- name: ORB clean uploads script
  template:
    src: "clean_uploads.sh.j2"
    dest: "{{orb_root}}/clean_uploads.sh"

- name: Schedule ORB clean uploads script
  cron:
    name: "Run ORB clean uploads"
    minute: "23"
    hour: "4"
    job: "{{orb_root}}/clean_uploads.sh"

- name: ORB cron script
  template:
    src: "cron.sh.j2"
    dest: "{{orb_root}}/cron.sh"

- name: Schedule ORB cron script
  cron:
    name: "Run ORB cron script"
    minute: "23"
    hour: "4"
    job: "{{orb_root}}/cron.sh"

- name: ORB link checker script
  template:
    src: "link-checker.sh.j2"
    dest: "{{orb_root}}/link-checker.sh"

- name: Schedule ORB link checker script
  cron:
    name: "Run ORB link checker"
    minute: "2"
    hour: "3"
    job: "{{orb_root}}/link-checker.sh"

- name: ORB virus scan script
  template:
    src: "virus-scan.sh.j2"
    dest: "{{orb_root}}/virus-scan.sh"

- name: Schedule ORB virus scan script
  cron:
    name: "Run ORB virus scan"
    minute: "2"
    hour: "3"
    job: "{{orb_root}}/virus-scan.sh"

- name: ORB Apache conf
  template:
    src: "http-vhost.conf.j2"
    dest: "{{ apache_conf_path }}/sites-available/{{ orb_vhosts_filename }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache

- name: Enable ORB apache conf
  file:
    src: "{{ apache_conf_path }}/sites-available/{{ orb_vhosts_filename }}"
    dest: "{{ apache_conf_path }}/sites-enabled/{{ orb_vhosts_filename }}"
    state: link
  notify: restart apache

- name: ORB HTTPS Apache conf
  template:
    src: "https-vhost.conf.j2"
    dest: "{{ apache_conf_path }}/sites-available/{{ orb_vhosts_tls_filename }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache

- name: Install configured ORB peers
  django_manage:
    command: "add_peer {{item.host}} --name=\"{{item.name}}\" --user=\"{{item.user}}\" --key=\"{{item.key}}\""
    app_path: "{{orb_base_project}}"
    settings: "{{orb_django_settings_module}}"
    virtualenv: "{{orb_virtualenv_path}}"
  with_items: "{{orb_peers}}"

- name: Add local super users
  django_manage:
    command: "add_super_user --email={{item.email}} --password={{item.password}}"
    app_path: "{{orb_base_project}}"
    settings: "{{orb_django_settings_module}}"
    virtualenv: "{{orb_virtualenv_path}}"
  with_items: "{{orb_super_users}}"


